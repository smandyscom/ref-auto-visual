<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qCuIrkoAAAAASUVORK5CYII=
</value>
  </data>
</root>