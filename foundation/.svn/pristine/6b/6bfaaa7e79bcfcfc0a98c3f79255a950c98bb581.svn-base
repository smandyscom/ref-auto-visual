Imports Automation
Imports Automation.Components.CommandStateMachine
Imports Automation.Components.Services
Imports Automation.mainIOHardware
Public Class clsNgPicker
    Inherits systemControlPrototype
    Implements IFinishableStation
    Implements IModuleSingle


#Region "External Data declare"
    Public BrokenReporterCollection As List(Of IBrokenReport) = New List(Of IBrokenReport) '設計n個取ng的位置
    Public motorPointPlace As cMotorPoint

    'Hsien , open parameter to setting , 2015.07.22
    Public VacummGeneratingTime As TimeSpan = New TimeSpan(0, 0, 1)
    Public VacummBreakTime As TimeSpan = New TimeSpan(0, 0, 1)

    Public Property PlacePositionInfo As Func(Of shiftDataPackBase) Implements IModuleSingle.TargetPositionInfo

#End Region
#Region "Device declare"
    Property motorNgPicker As motorControl = New motorControl
    Property cyDown As cylinderControl = New cylinderControl() '上下氣缸
    Property doVacuum As ULong
    Property doVBreak As ULong
    'Property Vs As sensorControl = New sensorControl()
#End Region
#Region "Data declare"
    Dim currentBrokenCheck As IBrokenReport '記住是哪個broken reporter發生ng
    Dim timer As singleTimer = New singleTimer With {.TimerGoal = New TimeSpan(0, 0, 1)}
    Dim holdWaferData As shiftDataPackBase = New shiftDataPackBase
    Public Property FinishableFlags As New flagController(Of IFinishableStation.controlFlags) Implements IFinishableStation.FinishableFlags
    Public Property UpstreamStations As List(Of IFinishableStation) Implements IFinishableStation.UpstreamStations
#End Region

    Enum stateIgniteEnum As Integer
        _0
        _10
        _20
        _30
        _40
        _100
        _110
        _120
        _300
        _200

        _5

    End Enum
    Enum stateExcuteEnum As Integer
        _0
        _10
        SYNCHRON_WITH_BROKENS 'Hsien , synchron with broken checkers
        _20
        _100
        _110
        _120
        _130
        _200
        SYCHRON_WITH_PLACEMENT  'Hsien , synchron with the place 

        _205
        _210
        _220

        END_CYCLE
    End Enum
    Protected Function stateIgnite() As Integer
        Select Case CType(systemSubState, stateIgniteEnum)
            Case stateIgniteEnum._0
                If FinishableFlags.viewFlag(IFinishableStation.controlFlags.COMMAND_IGNITE) = True Then
                    systemSubState = stateIgniteEnum._5
                End If
            Case stateIgniteEnum._5
                If cyDown.drive(cylinderControl.cylinderCommandEnum.GO_OFF_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    systemSubState = stateIgniteEnum._10
                End If
            Case stateIgniteEnum._10
                If motorNgPicker.drive(motorControl.motorCommandEnum.GO_HOME) = motorControl.statusEnum.EXECUTION_END Then
                    systemSubState = stateIgniteEnum._20
                End If
            Case stateIgniteEnum._20
                If motorNgPicker.drive(motorControl.motorCommandEnum.GO_POSITION, motorPointPlace) = motorControl.statusEnum.EXECUTION_END Then
                    FinishableFlags.writeFlag(IFinishableStation.controlFlags.COMMAND_IGNITE, False)
                    systemMainState = systemStatesEnum.EXECUTE
                    'systemSubState = 0 '不需要，會自動歸0
                End If
        End Select
        Return 0
    End Function
    Sub alarmOccursHandler(sender As Object, e As alarmEventArgs) Handles CentralAlarmObject.alarmOccured, PauseBlock.InterceptedEvent
        If (MainState = systemStatesEnum.IGNITE) Then
            motorNgPicker.drive(motorControl.motorCommandEnum.MOTION_PAUSE)
        End If
    End Sub
    Sub alarmReleaseHandler(sender As Object, e As alarmEventArgs) Handles CentralAlarmObject.alarmReleased, PauseBlock.UninterceptedEvent
        If (MainState = systemStatesEnum.IGNITE) Then
            motorNgPicker.drive(motorControl.motorCommandEnum.MOTION_RESUME)
        End If
    End Sub
    Protected Function stateExecute() As Integer
        Select Case CType(systemSubState, stateExcuteEnum)
            Case stateExcuteEnum._0
                '檢查進料處錄出料處任務
                'For Each br As IBrokenReport In BrokenReporterCollection
                '    If br.ngFlags.viewFlag(IBrokenReport.BrokenFlagsEnum.NG) = True Then
                '        currentBrokenCheck = br '記住是哪個brokenReporter, 取得該馬達點位
                '        WaferData.Assign(currentBrokenCheck.WaferData.Invoke)
                '        systemSubState = stateExcuteEnum._10
                '        Exit For
                '    End If
                'Next
                'Hsien , simplified logic , 2015.10.21
                currentBrokenCheck = BrokenReporterCollection.Find(Function(__brokenCheck As IBrokenReport) (__brokenCheck.ngFlags.viewFlag(IBrokenReport.BrokenFlagsEnum.NG)))
                If (currentBrokenCheck IsNot Nothing) Then
                    'WaferData.Assign(currentBrokenCheck.WaferData.Invoke)
                    systemSubState = stateExcuteEnum._10
                End If
                'End If
            Case stateExcuteEnum._10
                '鎖住相關輸送帶與broken reporter
                BrokenReporterCollection.ForEach(Sub(__brokenCheck As IBrokenReport) __brokenCheck.ngFlags.setFlag(IBrokenReport.BrokenFlagsEnum.LOCK))
                'If setLock(BrokenReporter) = True Then
                systemSubState = stateExcuteEnum._20
                'End If
            Case stateExcuteEnum.SYNCHRON_WITH_BROKENS
                'all broken is on module action state , Hsien , 2015.10.21
                If (BrokenReporterCollection.TrueForAll(Function(__brokenCheck As IBrokenReport) (__brokenCheck.TargetPositionInfo.Invoke.ModuleAction.viewFlag(interlockedFlag.POSITION_OCCUPIED)))) Then
                    systemSubState = stateExcuteEnum._20
                End If
            Case stateExcuteEnum._20 '移至取片位置
                If motorNgPicker.drive(motorControl.motorCommandEnum.GO_POSITION, currentBrokenCheck.pickPoint) = motorControl.statusEnum.EXECUTION_END Then
                    systemSubState = stateExcuteEnum._100
                End If

            Case stateExcuteEnum._100 '氣缸下
                If cyDown.drive(cylinderControl.cylinderCommandEnum.GO_ON_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    systemSubState = stateExcuteEnum._110
                End If
            Case stateExcuteEnum._110 '開真空
                writeBit(doVacuum, True)
                'tmr.TimerGoal = New TimeSpan(0, 0, 0.2)
                timer.TimerGoal = VacummGeneratingTime    'Hsien , 2015.08.06
                timer.IsEnabled = True
                systemSubState = stateExcuteEnum._120
            Case stateExcuteEnum._120 '真空確認或timeout當作吸到
                'If Vs.IsSensorCovered = True OrElse tmr.IsTimerTicked = True Then
                If timer.IsTimerTicked = True Then
                    systemSubState = stateExcuteEnum._130
                End If
                'End If
            Case stateExcuteEnum._130 '氣缸上
                If cyDown.drive(cylinderControl.cylinderCommandEnum.GO_OFF_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    systemSubState = stateExcuteEnum._200
                End If
            Case stateExcuteEnum._200
                If motorNgPicker.drive(motorControl.motorCommandEnum.GO_POSITION, motorPointPlace) = motorControl.statusEnum.EXECUTION_END Then
                    '----------------------------------
                    'Release conveyor , and reset datas
                    '----------------------------------
                    BrokenReporterCollection.ForEach(Sub(__brokenCheck As IBrokenReport) __brokenCheck.ngFlags.resetFlag(IBrokenReport.BrokenFlagsEnum.LOCK))   'unlock
                    holdWaferData = currentBrokenCheck.TargetPositionInfo.Invoke.Clone   'copy 
                    currentBrokenCheck.ngFlags.resetFlag(IBrokenReport.BrokenFlagsEnum.NG)
                    currentBrokenCheck.TargetPositionInfo.Invoke.IsPositionOccupied = False

                    systemSubState = stateExcuteEnum.SYCHRON_WITH_PLACEMENT
                End If
            Case stateExcuteEnum.SYCHRON_WITH_PLACEMENT
                'wait until placement able to work
                '1. placement is nothing
                '2. or placement existed  , and synchroned
                If (PlacePositionInfo Is Nothing OrElse
                    (PlacePositionInfo.Invoke.ModuleAction.viewFlag(interlockedFlag.POSITION_OCCUPIED))) Then
                    systemSubState = stateExcuteEnum._205
                End If

                '--------------------------------
                '   Place movement
                '--------------------------------
            Case stateExcuteEnum._205
                If (cyDown.drive(cylinderControl.cylinderCommandEnum.GO_ON_END) = cylinderControl.statusEnum.EXECUTION_END) Then
                    systemSubState = stateExcuteEnum._210
                End If
            Case stateExcuteEnum._210
                'resetLock() '解鎖

                writeBit(doVacuum, False) '關真空
                writeBit(doVBreak, True)

                timer.TimerGoal = VacummBreakTime
                timer.IsEnabled = True    'reset , Hsien , 2015.08.06

                systemSubState = stateExcuteEnum._220
            Case stateExcuteEnum._220
                If timer.IsTimerTicked = True Then
                    writeBit(doVBreak, False)

                    '---------------------------
                    '   Release placement if any
                    '---------------------------
                    If (PlacePositionInfo IsNot Nothing) Then
                        With PlacePositionInfo.Invoke
                            .Assign(holdWaferData)
                            .ModuleAction.resetFlag(interlockedFlag.POSITION_OCCUPIED)
                        End With
                    End If

                    systemSubState = stateExcuteEnum.END_CYCLE
                End If
                '--------------------------------
                '   End Place movement
                '--------------------------------

            Case stateExcuteEnum.END_CYCLE
                If (cyDown.drive(cylinderControl.cylinderCommandEnum.GO_OFF_END) = cylinderControl.statusEnum.EXECUTION_END) Then
                    systemSubState = stateExcuteEnum._0
                End If


        End Select
        Return 0
    End Function

    Function initMappingAndSetup() As Integer
        systemMainStateFunctions(systemStatesEnum.IGNITE) = AddressOf stateIgnite
        systemMainStateFunctions(systemStatesEnum.EXECUTE) = AddressOf stateExecute
        systemMainState = systemStatesEnum.IGNITE
        initEnableAllDrives() 'enable 此class裡所有的driveBase

        Return 0
    End Function

    Public Sub New()
        Me.initialize = [Delegate].Combine(Me.initialize, New Func(Of Integer)(AddressOf Me.initMappingAndSetup))
    End Sub

End Class

