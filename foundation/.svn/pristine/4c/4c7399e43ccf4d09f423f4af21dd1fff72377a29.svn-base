Imports Automation

<Serializable()>
Public Class userControlLane
    Property IsMirror As Boolean = False    'control the flow direction
    Property IsElementModuleActionVisualizing As Boolean
        Get
            Return __isElementModuleActionVisualizing
        End Get
        Set(value As Boolean)
            __isElementModuleActionVisualizing = value

            For Each __control As Control In tableLayoutPanelLane.Controls
                Dim __element As userControlElement = TryCast(__control, userControlElement)
                If (__element IsNot Nothing) Then
                    __element.IsModuleActionVisualizing = value
                End If
            Next

        End Set
    End Property
    Dim __isElementModuleActionVisualizing As Boolean = True

    Public Sub LaneReference(value As Func(Of shiftDataCollection)) 'as reference 

        If (value IsNot Nothing) Then

            timerScan.Enabled = False
            tableLayoutPanelLane.Controls.Clear()
            GC.Collect()

            __laneData = value
            laneLoad(Me, Nothing)
        End If

    End Sub
    Property IsLaneOccupiedVisual As Boolean
        Get
            Return __isLaneOccupiedVisual
        End Get
        Set(value As Boolean)
            __isLaneOccupiedVisual = value
        End Set
    End Property
    Property IsLaneModuleActionVisual As Boolean
        Get
            Return __isLaneModuleActionVisual
        End Get
        Set(value As Boolean)
            __isLaneModuleActionVisual = value
        End Set
    End Property

    Dim __laneData As Func(Of shiftDataCollection) = Function() (tempLaneData)

    Dim __isLaneOccupiedVisual As Boolean = False
    Dim __isLaneModuleActionVisual As Boolean = False

    Dim tempLaneData As shiftDataCollection = New shiftDataCollection With {.DataCount = 1}
    '-------------------------------------------
    '   Layout test use , Hsien , 2015.06.05
    '-------------------------------------------
    'Property LaneCount As Integer
    '    Get
    '        Return __tempLaneData.DataCollection.Count
    '    End Get
    '    Set(value As Integer)
    '        __tempLaneData = New shiftDataCollection With {.DataCount = value}
    '        LaneReference = Function() (__tempLaneData)
    '    End Set
    'End Property
    'Dim __tempLaneData As shiftDataCollection = Nothing

    Private Sub laneLoad(sender As Object, e As EventArgs) Handles MyBase.Load

        If __laneData Is Nothing Then
            Exit Sub
        End If



        tableLayoutPanelLane.Controls.Clear()

        If (IsMirror) Then
            For index = __laneData.Invoke.DataCollection.Count - 1 To 0 Step -1
                establishElements(index)
            Next
        Else
            For index = 0 To __laneData.Invoke.DataCollection.Count - 1
                establishElements(index)
            Next
        End If

        'timerScan.Enabled = True

    End Sub

    Sub establishElements(______index As Integer)
        Dim __element As userControlElement = New userControlElement With {.IsModuleActionVisualizing = IsElementModuleActionVisualizing}
        Dim __index As Integer = ______index
        __element.ShiftDataReference = Function() (__laneData.Invoke.DataCollection(__index))   'linkin into trayElement
        __element.LabelElement.Text = __index ' mark the location number
        tableLayoutPanelLane.Controls.Add(__element)
        tableLayoutPanelLane.PerformLayout()
    End Sub


    Private Sub timerLaneTick(sender As Object, e As EventArgs) Handles timerScan.Tick
        'utilitiesUI.controlFollowBooleanColor(LabelIsOccupied, __laneData.Invoke.IsPositionOccupied, Color.Blue)
        'utilitiesUI.controlFollowBooleanColor(LabelModuleAction, __laneData.Invoke.ModuleAction.viewFlag(interlockedFlag.POSITION_OCCUPIED), Color.Green)
    End Sub
End Class
