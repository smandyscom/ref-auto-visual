<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>