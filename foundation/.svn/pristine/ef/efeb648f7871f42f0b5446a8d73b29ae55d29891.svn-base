Imports Automation
Imports Automation.Components.CommandStateMachine
Imports Automation.Components.Services
Imports Automation.mainIOHardware
''' <summary>
''' 檢查站在前N站，只看取得的結果
''' 要看兩道輸送帶，NG結果要分開放(氣缸移動)
''' 目前氣缸移動是看哪一道輸送帶來決定
''' </summary>
''' <remarks></remarks>
Public Class clsNgPickerV2
    Inherits systemControlPrototype
    Implements IFinishableStation

    Public Event BrokenWaferRemoved(ByVal sender As Object, ByVal e As EventArgs)

#Region "External Data declare"
    Public Property TargetPosition As New List(Of ngChecker)
    Property motorPointPlace As cMotorPoint
    Property GetNgBinCylinder As Func(Of shiftDataPackBase, cylinderControl.cylinderCommandEnum)
    'Hsien , 2015.06.11
    ReadOnly Property NgData As shiftDataPackBase
        'The data picker had picked from source
        Get
            Return __ngData
        End Get
    End Property

    'Hsien , open parameter to setting , 201507.22
    Property VacummGeneratingTime As TimeSpan = New TimeSpan(0, 0, 1)
    Property VacummBreakTime As TimeSpan = New TimeSpan(0, 0, 1)
#End Region
#Region "Device declare"
    Public motorNgPicker As motorControl = New motorControl
    Public cyDown As cylinderControl = New cylinderControl() '上下氣缸
    Public cyShift As cylinderControl = New cylinderControl() 'NG盒位移

    Public doVacuum As ULong = 0
    Public doVBreak As ULong = 0


    'Property Vs As sensorControl = New sensorControl()
#End Region
#Region "Data declare"
    Dim tmr As singleTimer = New singleTimer With {.TimerGoal = New TimeSpan(0, 0, 1)}
    Public Property FinishableFlags As New flagController(Of IFinishableStation.controlFlags) Implements IFinishableStation.FinishableFlags
    Public Property UpstreamStations As List(Of IFinishableStation) Implements IFinishableStation.UpstreamStations
    Dim TargetPositionIndex As Short
    Dim __ngData As shiftDataPackBase = Nothing   'Hsien , 2015.06.11 , used to store data
    Dim motorPointPickPointer As cMotorPoint

#End Region
    Enum stateIgniteEnum As Integer
        _0
        _10
        _20
        _30
        _40
        _100
        _110
        _120
        _300
        _200

        _5

    End Enum
    Enum ExcuteEnum
        _0
        _10
        _20
        _30
        _40
        _100
        _110
        _120
        _300
        _200
        _1000

        _130

        _210

        _220

    End Enum
    Protected Function stateIgnite() As Integer
        Select Case CType(systemSubState, stateIgniteEnum)
            Case stateIgniteEnum._0
                If FinishableFlags.viewFlag(IFinishableStation.controlFlags.COMMAND_IGNITE) = True Then
                    systemSubState = stateIgniteEnum._5
                End If
            Case stateIgniteEnum._5
                If cyDown.drive(cylinderControl.cylinderCommandEnum.GO_OFF_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    systemSubState = stateIgniteEnum._10
                End If
            Case stateIgniteEnum._10
                If motorNgPicker.drive(motorControl.motorCommandEnum.GO_HOME) = motorControl.statusEnum.EXECUTION_END Then
                    systemSubState = stateIgniteEnum._20
                End If
            Case stateIgniteEnum._20
                If motorNgPicker.drive(motorControl.motorCommandEnum.GO_POSITION, motorPointPlace) = motorControl.statusEnum.EXECUTION_END Then
                    FinishableFlags.writeFlag(IFinishableStation.controlFlags.COMMAND_IGNITE, False)
                    systemMainState = systemStatesEnum.EXECUTE
                    'systemSubState = 0 '不需要，會自動歸0
                End If
        End Select
        Return 0
    End Function
    Sub alarmOccursHandler() Handles CentralAlarmObject.alarmOccured, PauseBlock.InterceptedEvent
        'Hsien , pause the motor motion anytime , 2015.07.14
        'If (MainState = systemStatesEnum.IGNITE) Then
        motorNgPicker.drive(motorControl.motorCommandEnum.MOTION_PAUSE)
        'End If
    End Sub
    Sub alarmReleaseHandler() Handles CentralAlarmObject.alarmReleased, PauseBlock.UninterceptedEvent
        'If (MainState = systemStatesEnum.IGNITE) Then
        motorNgPicker.drive(motorControl.motorCommandEnum.MOTION_RESUME)
        'End If
    End Sub
    Protected Function stateExecute() As Integer
        Excute(systemSubState)
        Return 0
    End Function
    Function Excute(ByRef cStep As ExcuteEnum) As Integer

        'auto reset module action
        ' release condition : target position hadoccupied and is not the ng thing , or target position had not occupied
        TargetPosition.ForEach(Sub(obj As ngChecker)
                                   If obj.WaferData.Invoke.ModuleAction.viewFlag(interlockedFlag.POSITION_OCCUPIED) = True Then
                                       If (obj.WaferData.Invoke.IsPositionOccupied = True AndAlso obj.IsNg.Invoke = False) OrElse
                                           obj.WaferData.Invoke.IsPositionOccupied = False Then
                                           obj.WaferData.Invoke.ModuleAction.writeFlag(interlockedFlag.POSITION_OCCUPIED, False)
                                       End If
                                   End If
                               End Sub)

        Select Case cStep
            Case ExcuteEnum._0
                '檢查進料處錄出料處任務
                For i As Short = 0 To TargetPosition.Count - 1
                    If TargetPosition(i).WaferData.Invoke.ModuleAction.viewFlag(interlockedFlag.POSITION_OCCUPIED) = True Then
                        If TargetPosition(i).WaferData.Invoke.IsPositionOccupied = True AndAlso
                            TargetPosition(i).IsNg.Invoke = True Then

                            __ngData = TargetPosition(i).WaferData.Invoke.Clone  'Hsien , 2015.6.11

                            TargetPositionIndex = i
                            cStep = ExcuteEnum._10
                            Exit For
                        Else
                            'reset module action
                            TargetPosition(i).WaferData.Invoke.ModuleAction.writeFlag(interlockedFlag.POSITION_OCCUPIED, False)
                        End If
                    End If
                Next
            Case ExcuteEnum._10
                'get motor point
                motorPointPickPointer = TargetPosition(TargetPositionIndex).pickPoint
                motorNgPicker.drive(motorControl.motorCommandEnum.GO_POSITION, motorPointPickPointer)

                If (cyShift IsNot Nothing) Then
                    'Hsien , missed the case of no bin cylinder , 2015.06.29
                    cyShift.drive(GetNgBinCylinder(TargetPosition(TargetPositionIndex).WaferData.Invoke))
                End If
                cStep = ExcuteEnum._20

            Case ExcuteEnum._20 '移至取片位置
                If motorNgPicker.CommandEndStatus = motorControl.statusEnum.EXECUTION_END Then
                    cStep = ExcuteEnum._100
                End If
            Case ExcuteEnum._100 '氣缸下
                If cyDown.drive(cylinderControl.cylinderCommandEnum.GO_ON_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    cStep = ExcuteEnum._110
                End If
            Case ExcuteEnum._110 '開真空
                writeBit(doVacuum, True)
                'tmr.TimerGoal = New TimeSpan(0, 0, 0.2) : tmr.IsEnabled = True 'Hsien , wrong argument
                'tmr.TimerGoal = New TimeSpan(0, 0, 0, 0, 500)
                tmr.TimerGoal = VacummGeneratingTime
                tmr.IsEnabled = True

                cStep = ExcuteEnum._120
            Case ExcuteEnum._120 '真空確認或timeout當作吸到
                If tmr.IsTimerTicked = True Then
                    cStep = ExcuteEnum._130
                End If
            Case ExcuteEnum._130 '氣缸上
                If cyDown.drive(cylinderControl.cylinderCommandEnum.GO_OFF_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    With TargetPosition(TargetPositionIndex).WaferData.Invoke
                        .IsPositionOccupied = False
                        .ModuleAction.writeFlag(interlockedFlag.POSITION_OCCUPIED, False)  'reset module action
                    End With
                    cStep = ExcuteEnum._200
                End If

            Case ExcuteEnum._200
                If motorNgPicker.drive(motorControl.motorCommandEnum.GO_POSITION, motorPointPlace) = motorControl.statusEnum.EXECUTION_END AndAlso
                    (cyShift Is Nothing OrElse cyShift.CommandEndStatus = cylinderControl.statusEnum.EXECUTION_END) Then
                    cStep = ExcuteEnum._210
                End If
            Case ExcuteEnum._210
                writeBit(doVacuum, False) '關真空
                writeBit(doVBreak, True)
                'tmr.TimerGoal = New TimeSpan(0, 0, 0, 0, 500)
                tmr.TimerGoal = VacummBreakTime
                tmr.IsEnabled = True
                cStep = ExcuteEnum._220
            Case ExcuteEnum._220
                If tmr.IsTimerTicked = True Then
                    writeBit(doVBreak, False)
                    tmr.IsEnabled = False

                    RaiseEvent BrokenWaferRemoved(Me, Nothing)  'Hsien ,  2015.05.27

                    cStep = ExcuteEnum._300
                End If


            Case ExcuteEnum._300
                If cyShift Is Nothing Then
                    cStep = ExcuteEnum._0
                Else
                    If TargetPosition(TargetPositionIndex).SpNgBinFull.IsSensorCovered = True AndAlso tmr.IsTimerTicked = True Then
                        Dim ap As New alarmContentSensor
                        With ap
                            .Sender = Me
                            .Inputs = TargetPosition(TargetPositionIndex).SpNgBinFull.InputBit
                            .PossibleResponse = alarmContextBase.responseWays.RETRY
                            .Reason = alarmContentSensor.alarmReasonSensor.SHOULD_BE_OFF
                            .CallbackResponse(alarmContextBase.responseWays.RETRY) = Function() As Boolean
                                                                                         systemSubState = ExcuteEnum._220
                                                                                         Return True
                                                                                     End Function
                            CentralAlarmObject.raisingAlarm(ap)
                        End With

                    ElseIf TargetPosition(TargetPositionIndex).SpNgBinFull.IsSensorCovered = False Then
                        cStep = ExcuteEnum._0
                    End If
                End If
        End Select
        Return 0
    End Function


    Function initMappingAndSetup() As Integer
        systemMainStateFunctions(systemStatesEnum.IGNITE) = AddressOf stateIgnite
        systemMainStateFunctions(systemStatesEnum.EXECUTE) = AddressOf stateExecute
        systemMainState = systemStatesEnum.IGNITE
        initEnableAllDrives() 'enable 此class裡所有的driveBase
        Return 0
    End Function

    Public Sub New()
        Me.initialize = [Delegate].Combine(Me.initialize, New Func(Of Integer)(AddressOf Me.initMappingAndSetup))
    End Sub

End Class

Public Class ngChecker
    Property pickPoint As cMotorPoint
    Property WaferData As Func(Of shiftDataPackBase)
    Property IsNg As Func(Of Boolean)
    Property SpNgBinFull As sensorControl
End Class