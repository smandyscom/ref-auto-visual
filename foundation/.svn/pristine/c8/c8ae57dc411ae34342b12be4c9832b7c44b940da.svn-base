Imports Automation
Imports Automation.Components.Services
Imports Automation.Components.CommandStateMachine
Imports Automation.Components

Public Class StackLoad : Inherits systemControlPrototype
    Implements IFinishableStation
    Public Enum CheckStackStyleSenIndex
        SEN_1
        SEN_2
    End Enum

    Public Property _FinishableFlag As New flagController(Of IFinishableStation.controlFlags) Implements IFinishableStation.FinishableFlags
    Public Property _UpstreamStation As List(Of IFinishableStation) Implements IFinishableStation.UpstreamStations


    Public loadFlags As flagController(Of flagsInLoaderUnloader)

    Dim tmr As singleTimer = New singleTimer With {.TimerGoal = New TimeSpan(0, 0, 5)}

    'Cassette:Cas    UD:Up Down    Position:Pos    Sensor:Sen
    Public IN_Stopper1 As cylinderControl = New cylinderControl With {.IsEnabled = True}
    Public IN_Stopper2 As cylinderControl = New cylinderControl With {.IsEnabled = True}
    Public IN_Stopper3 As cylinderControl = New cylinderControl With {.IsEnabled = True}
    Public IN_Stopper4 As cylinderControl = New cylinderControl With {.IsEnabled = True}


    Public IN_ConveyerMotor As IDrivable = New motorControlDrivable With {.IsEnabled = True}   '載出馬達 , Hsien , regular the data type , 2015.06.04

    Public UpDownCylinder As New cylinderControl With {.IsEnabled = True} '堆疊冶具頂升氣缸
    Public UpDownStackPosSen As sensorControl = New sensorControl With {.IsEnabled = True}


    Public IN_ConveyerPosSen1 As sensorControl = New sensorControl '載入卡匣位置確認感測器1    'on Loading Side
    Public IN_ConveyerPosSen2 As sensorControl = New sensorControl '載入卡匣位置確認感測器2    'on Stopper 1
    Public IN_ConveyerPosSen3 As sensorControl = New sensorControl '載入卡匣位置確認感測器3    'on Stopper 2
    Public IN_ConveyerPosSen4 As sensorControl = New sensorControl '載入卡匣位置確認感測器3    'on Stopper 3

    Public OUT_ConveyeReachSen As sensorControl = New sensorControl With {.IsEnabled = True}
    Public OUT_ConveyerPosSen1 As sensorControl = New sensorControl With {.IsEnabled = True} '載出卡匣位置確認感測器1 , the lifter side
    Public OUT_ConveyerPosSen2 As sensorControl = New sensorControl With {.IsEnabled = True} '載出卡匣位置確認感測器2 , away from lifter


    Public IN_CasStyleCheckSen As SensorInfo() = New SensorInfo(1) {New SensorInfo With {.sw = IS_OFF}, New SensorInfo With {.sw = IS_OFF}}
    Private SensorIndex As Integer

    Public Function stateIgnite() As Integer
        Select Case systemSubState
            Case 0
                If _FinishableFlag.viewFlag(IFinishableStation.controlFlags.COMMAND_IGNITE) = True Then
                    systemSubState = 10
                End If
            Case 10 '堆疊冶具位置感測器Sen1要為Off
                If IN_ConveyerPosSen1.OffTimer.TimeElapsed.TotalMilliseconds > 100 Then
                    systemSubState = 20
                Else
                    Dim ap As New alarmContentSensor
                    With ap
                        .Sender = Me
                        .Inputs = IN_ConveyerPosSen1.InputBit
                        .PossibleResponse = alarmContextBase.responseWays.RETRY
                        .Reason = alarmContentSensor.alarmReasonSensor.SHOULD_BE_OFF
                        .CallbackResponse(alarmContextBase.responseWays.RETRY) = Function() As Boolean
                                                                                     systemSubState = 10
                                                                                     Return True
                                                                                 End Function
                        CentralAlarmObject.raisingAlarm(ap)
                    End With
                End If
            Case 20 '堆疊冶具位置感測器Sen2要為Off
                If IN_ConveyerPosSen2.OffTimer.TimeElapsed.TotalMilliseconds > 100 Then
                    systemSubState = 30
                Else
                    Dim ap As New alarmContentSensor
                    With ap
                        .Sender = Me
                        .Inputs = IN_ConveyerPosSen2.InputBit
                        .PossibleResponse = alarmContextBase.responseWays.RETRY
                        .Reason = alarmContentSensor.alarmReasonSensor.SHOULD_BE_OFF
                        .CallbackResponse(alarmContextBase.responseWays.RETRY) = Function() As Boolean
                                                                                     systemSubState = 20
                                                                                     Return True
                                                                                 End Function
                        CentralAlarmObject.raisingAlarm(ap)
                    End With
                End If
            Case 30 '堆疊冶具位置感測器Sen3要為Off
                If IN_ConveyerPosSen3.OffTimer.TimeElapsed.TotalMilliseconds > 100 Then
                    systemSubState = 40
                Else
                    Dim ap As New alarmContentSensor
                    With ap
                        .Sender = Me
                        .Inputs = IN_ConveyerPosSen3.InputBit
                        .PossibleResponse = alarmContextBase.responseWays.RETRY
                        .Reason = alarmContentSensor.alarmReasonSensor.SHOULD_BE_OFF
                        .CallbackResponse(alarmContextBase.responseWays.RETRY) = Function() As Boolean
                                                                                     systemSubState = 30
                                                                                     Return True
                                                                                 End Function
                        CentralAlarmObject.raisingAlarm(ap)
                    End With
                End If
            Case 40 '堆疊冶具位置感測器Sen4要為Off
                If IN_ConveyerPosSen4.OffTimer.TimeElapsed.TotalMilliseconds > 100 Then
                    systemSubState = 50
                Else
                    Dim ap As New alarmContentSensor
                    With ap
                        .Sender = Me
                        .Inputs = IN_ConveyerPosSen4.InputBit
                        .PossibleResponse = alarmContextBase.responseWays.RETRY
                        .Reason = alarmContentSensor.alarmReasonSensor.SHOULD_BE_OFF
                        .CallbackResponse(alarmContextBase.responseWays.RETRY) = Function() As Boolean
                                                                                     systemSubState = 40
                                                                                     Return True
                                                                                 End Function
                        CentralAlarmObject.raisingAlarm(ap)
                    End With
                End If
            Case 50
                SensorIndex = CheckStackStyleSenIndex.SEN_1
                systemSubState = 60
            Case 60 '判別感測器是否要檢查On或是Off
                If (IN_CasStyleCheckSen(SensorIndex).sw = IS_ON) Then
                    systemSubState = 70
                Else
                    systemSubState = 90
                End If
            Case 70 '檢查料匣形式防呆感測器
                If IN_CasStyleCheckSen(SensorIndex).status = IS_ON And (Not IN_CasStyleCheckSen(SensorIndex).sensor.IsSensorCovered) Then
                    systemSubState = 90
                ElseIf IN_CasStyleCheckSen(SensorIndex).status = IS_OFF And IN_CasStyleCheckSen(SensorIndex).sensor.IsSensorCovered Then
                    systemSubState = 90
                Else
                    systemSubState = 80
                End If
           
            Case 80 '產生錯誤
                Dim ap As New alarmContentSensor
                With ap
                    .Sender = Me
                    .Inputs = IN_CasStyleCheckSen(SensorIndex).sensor.InputBit
                    .PossibleResponse = alarmContextBase.responseWays.RETRY
                    If IN_CasStyleCheckSen(SensorIndex).status = IS_ON Then .Reason = alarmContentSensor.alarmReasonSensor.SHOULD_BE_OFF
                    If IN_CasStyleCheckSen(SensorIndex).status = IS_OFF Then .Reason = alarmContentSensor.alarmReasonSensor.SHOULD_BE_ON
                    .CallbackResponse(alarmContextBase.responseWays.RETRY) = Function() As Boolean
                                                                                 systemSubState = 50
                                                                                 Return True
                                                                             End Function
                    CentralAlarmObject.raisingAlarm(ap)
                End With
            Case 90 '檢查下一個感測器
                SensorIndex = SensorIndex + 1
                If SensorIndex > [Enum].GetValues(GetType(CheckStackStyleSenIndex)).Length - 1 Then
                    systemSubState = 100
                Else
                    systemSubState = 60
                End If
            Case 100
                _FinishableFlag.resetFlag(IFinishableStation.controlFlags.COMMAND_IGNITE)   'Hsien , 2015.04.09
                systemMainState = systemStatesEnum.EXECUTE
                systemSubState = 0
        End Select

        Return 0
    End Function

    Public Function stateExecute() As Integer

        '==========================================================
        ' Cassette Direction   >>>>>>>>>>>>>
        '           Stopper1     Stopper2     Stopper3     Stopper3
        'Sen1           Sen2         Sen3         Sen4
        '==========================================================
        '初始狀態      伸出          伸出        縮回  工作位

        Select Case systemSubState

            Case 0 '檢查堆疊冶具是否備便及是否已啟動
                If Not loadFlags.viewFlag(flagsInLoaderUnloader.CasOn_UD_ConveyerReady_f) And _
                   loadFlags.viewFlag(flagsInLoaderUnloader.Start_f) And _
                   (Not loadFlags.viewFlag(flagsInLoaderUnloader.LoadButtonBusy_f)) Then
                    If loadFlags.viewFlag(flagsInLoaderUnloader.CasUnloadEnable_f) Then '是否要作退堆疊冶具
                        loadFlags.writeFlag(flagsInLoaderUnloader.LoadButtonDisable_f, True) '使載入按鈕失效
                        systemSubState = 400 '至載出堆疊冶具程序
                    Else
                        If loadFlags.viewFlag(flagsInLoaderUnloader.CasOn_IN_ConveyerReady_f) And _
                             (Not loadFlags.viewFlag(flagsInLoaderUnloader.LoadButtonBusy_f)) Then '堆疊冶具是否在輸送帶上備便
                            loadFlags.writeFlag(flagsInLoaderUnloader.LoadButtonDisable_f, True) '使載入按鈕失效
                            systemSubState = 600 '至載入堆疊冶具程序
                        Else
                            systemSubState = 90
                        End If
                    End If
                Else
                    systemSubState = 90
                End If
                '-------------------------------------------------------
                '               檢查Sen3是否有堆疊冶具
                '-------------------------------------------------------
            Case 90 '檢查Sen3是否有堆疊冶具
                If IN_ConveyerPosSen3.OnTimer.TimeElapsed.TotalMilliseconds > 100 Then
                    systemSubState = 100
                Else
                    systemSubState = 200 '檢查其它位置是否有堆疊冶具
                End If
            Case 100 '檢查堆疊冶具在輸送帶上是否備便
                If Not loadFlags.viewFlag(flagsInLoaderUnloader.CasOn_IN_ConveyerReady_f) And _
                  (Not loadFlags.viewFlag(flagsInLoaderUnloader.LoadButtonBusy_f)) Then
                    loadFlags.writeFlag(flagsInLoaderUnloader.LoadButtonDisable_f, True) '使載入按鈕失效
                    systemSubState = 110
                Else
                    If IN_ConveyerPosSen2.OnTimer.TimeElapsed.TotalMilliseconds > 100 Then
                        systemSubState = 0
                    Else
                        systemSubState = 300 '檢查其它位置是否有堆疊冶具
                    End If
                End If
                '-------------------------------------------------------
                '              堆疊冶具進入備便位置程序
                '-------------------------------------------------------
            Case 110 '使氣缸下降
                If IN_Stopper2.drive(cylinderControl.cylinderCommandEnum.GO_ON_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    systemSubState = 120
                End If
            Case 120 '輸送帶開始移動料匣
                If (IN_ConveyerMotor.drive(motorControl.motorCommandEnum.JOG, LoadConveyerUsedPositions.MOTOR_POSITION_1) =
                     IDrivable.endStatus.EXECUTION_END) Then
                    tmr.TimerGoal = New TimeSpan(0, 0, 6)
                    tmr.IsEnabled = True    'restart
                    systemSubState = 130
                End If
            Case 130 '檢查Sen4是否有堆疊冶具
                If IN_ConveyerPosSen4.OnTimer.TimeElapsed.TotalMilliseconds > 100 Then
                    systemSubState = 160
                ElseIf (tmr.IsTimerTicked) Then
                    systemSubState = 140
                End If
            Case 140 '輸送帶馬達停止
                If IN_ConveyerMotor.drive(motorControl.motorCommandEnum.STOP_SLOW_DOWN) = IDrivable.endStatus.EXECUTION_END Then
                    systemSubState = 150
                End If
            Case 150 '產生錯誤
                Dim ap As New alarmContentSensor
                With ap
                    .Sender = Me
                    .Inputs = IN_ConveyerPosSen4.InputBit
                    .PossibleResponse = alarmContextBase.responseWays.RETRY
                    .Reason = alarmContentSensor.alarmReasonSensor.SHOULD_BE_ON
                    .CallbackResponse(alarmContextBase.responseWays.RETRY) = Function() As Boolean
                                                                                 systemSubState = 120
                                                                                 Return True
                                                                             End Function
                    CentralAlarmObject.raisingAlarm(ap)
                End With
            Case 160 '輸送帶馬達停止
                If IN_ConveyerMotor.drive(motorControl.motorCommandEnum.STOP_SLOW_DOWN) = IDrivable.endStatus.EXECUTION_END Then
                    systemSubState = 170
                End If
            Case 170 '使氣缸上升
                If IN_Stopper2.drive(cylinderControl.cylinderCommandEnum.GO_OFF_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    loadFlags.writeFlag(flagsInLoaderUnloader.CasOn_IN_ConveyerReady_f, True)
                    loadFlags.writeFlag(flagsInLoaderUnloader.LoadButtonDisable_f, False) '手動鈕致能
                    systemSubState = 0
                End If
                '-------------------------------------------------------
                '               檢查Sen2是否有堆疊冶具
                '-------------------------------------------------------
            Case 200 '檢查Sen2是否有堆疊冶具
                If IN_ConveyerPosSen2.OnTimer.TimeElapsed.TotalMilliseconds > 100 Then
                    loadFlags.writeFlag(flagsInLoaderUnloader.LoadButtonDisable_f, True) '使載入按鈕失效
                    systemSubState = 210
                Else
                    systemSubState = 300 '檢查其它位置是否有堆疊冶具
                End If
            Case 210 '使氣缸下降
                If IN_Stopper1.drive(cylinderControl.cylinderCommandEnum.GO_ON_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    systemSubState = 220
                End If
            Case 220 '輸送帶開始移動料匣
                If (IN_ConveyerMotor.drive(motorControl.motorCommandEnum.JOG, LoadConveyerUsedPositions.MOTOR_POSITION_1) =
                     IDrivable.endStatus.EXECUTION_END) Then
                    tmr.TimerGoal = New TimeSpan(0, 0, 10)
                    tmr.IsEnabled = True    'restart
                    systemSubState = 230
                End If
            Case 230 '檢查Sen3是否有堆疊冶具
                If IN_ConveyerPosSen3.OnTimer.TimeElapsed.TotalMilliseconds > 100 Then
                    systemSubState = 260
                ElseIf (tmr.IsTimerTicked) Then
                    systemSubState = 240
                End If
            Case 240 '輸送帶馬達停止
                If IN_ConveyerMotor.drive(motorControl.motorCommandEnum.STOP_SLOW_DOWN) = IDrivable.endStatus.EXECUTION_END Then
                    systemSubState = 250
                End If
            Case 250 '產生錯誤
                Dim ap As New alarmContentSensor
                With ap
                    .Sender = Me
                    .Inputs = IN_ConveyerPosSen3.InputBit
                    .PossibleResponse = alarmContextBase.responseWays.RETRY
                    .Reason = alarmContentSensor.alarmReasonSensor.SHOULD_BE_ON
                    .CallbackResponse(alarmContextBase.responseWays.RETRY) = Function() As Boolean
                                                                                 systemSubState = 220
                                                                                 Return True
                                                                             End Function
                    CentralAlarmObject.raisingAlarm(ap)
                End With
            Case 260 '輸送帶馬達停止
                If IN_ConveyerMotor.drive(motorControl.motorCommandEnum.STOP_SLOW_DOWN) = IDrivable.endStatus.EXECUTION_END Then
                    systemSubState = 270
                End If
            Case 250 '使氣缸上升
                If IN_Stopper1.drive(cylinderControl.cylinderCommandEnum.GO_OFF_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    loadFlags.writeFlag(flagsInLoaderUnloader.LoadButtonDisable_f, False) '手動鈕致能
                    systemSubState = 0
                End If
                '-------------------------------------------------------
                '               檢查Sen1是否有堆疊冶具
                '-------------------------------------------------------

            Case 300 '檢查Sen1是否有堆疊冶具
                If IN_ConveyerPosSen1.OnTimer.TimeElapsed.TotalMilliseconds > 100 Then
                    loadFlags.writeFlag(flagsInLoaderUnloader.LoadButtonDisable_f, True) '使載入按鈕失效
                    systemSubState = 310
                Else
                    systemSubState = 0
                End If
            Case 310 '輸送帶開始移動料匣
                If (IN_ConveyerMotor.drive(motorControl.motorCommandEnum.JOG, LoadConveyerUsedPositions.MOTOR_POSITION_1) =
                     IDrivable.endStatus.EXECUTION_END) Then
                    tmr.TimerGoal = New TimeSpan(0, 0, 6)
                    tmr.IsEnabled = True    'restart
                    systemSubState = 320
                End If
            Case 320 '檢查Sen2是否有卡匣到達
                If IN_ConveyerPosSen2.OnTimer.TimeElapsed.TotalMilliseconds > 100 Then
                    systemSubState = 330
                ElseIf (tmr.IsTimerTicked) Then
                    systemSubState = 330
                End If
            Case 330 '輸送帶馬達停止
                If IN_ConveyerMotor.drive(motorControl.motorCommandEnum.STOP_SLOW_DOWN) = IDrivable.endStatus.EXECUTION_END Then
                    loadFlags.writeFlag(flagsInLoaderUnloader.LoadButtonDisable_f, False) '手動鈕致能
                    systemSubState = 0
                End If
                '-------------------------------------------------------
                '                      退堆疊冶具程序
                '-------------------------------------------------------
            Case 400 '平台下降
                If UpDownCylinder.drive(cylinderControl.cylinderCommandEnum.GO_OFF_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    systemSubState = 460
                End If
            Case 460 '檢查堆疊冶具是否下降
                If UpDownStackPosSen.OffTimer.TimeElapsed.TotalMilliseconds > 100 Then
                    systemSubState = 480
                Else
                    systemSubState = 470
                End If
            Case 470 '產生錯誤
                Dim ap As New alarmContentSensor
                With ap
                    .Sender = Me
                    .Inputs = UpDownStackPosSen.InputBit
                    .PossibleResponse = alarmContextBase.responseWays.RETRY
                    .Reason = alarmContentSensor.alarmReasonSensor.SHOULD_BE_OFF
                    .CallbackResponse(alarmContextBase.responseWays.RETRY) = Function() As Boolean
                                                                                 systemSubState = 460
                                                                                 Return True
                                                                             End Function
                    CentralAlarmObject.raisingAlarm(ap)
                End With
            Case 480 '使擋堆疊冶具氣缸下降
                If IN_Stopper4.drive(cylinderControl.cylinderCommandEnum.GO_ON_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    systemSubState = 490
                End If
            Case 490 '檢查是否可以載出卡匣
                If loadFlags.viewFlag(flagsInLoaderUnloader.CasUnloadSpaceReady_f) Then
                    systemSubState = 500
                End If
            Case 500 '輸送帶開始移動料匣
                If (IN_ConveyerMotor.drive(motorControl.motorCommandEnum.JOG, LoadConveyerUsedPositions.MOTOR_POSITION_1) =
                     IDrivable.endStatus.EXECUTION_END) Then
                    tmr.TimerGoal = New TimeSpan(0, 0, 6)
                    tmr.IsEnabled = True    'restart
                    systemSubState = 510
                End If
            Case 510 '檢查到位感測器
                If OUT_ConveyeReachSen.OnTimer.TimeElapsed.TotalMilliseconds > 100 Then
                    systemSubState = 570
                ElseIf (tmr.IsTimerTicked) Then
                    systemSubState = 550
                End If
            Case 550 '輸送帶馬達停止
                If IN_ConveyerMotor.drive(motorControl.motorCommandEnum.STOP_SLOW_DOWN) = IDrivable.endStatus.EXECUTION_END Then
                    systemSubState = 560
                End If
            Case 560 '產生錯誤
                Dim ap As New alarmContentSensor
                With ap
                    .Sender = Me
                    .Inputs = OUT_ConveyeReachSen.InputBit
                    .PossibleResponse = alarmContextBase.responseWays.RETRY
                    .Reason = alarmContentSensor.alarmReasonSensor.SHOULD_BE_ON
                    .CallbackResponse(alarmContextBase.responseWays.RETRY) = Function() As Boolean
                                                                                 systemSubState = 500
                                                                                 Return True
                                                                             End Function
                    CentralAlarmObject.raisingAlarm(ap)
                End With
            Case 570 '輸送帶馬達停止
                If IN_ConveyerMotor.drive(motorControl.motorCommandEnum.STOP_SLOW_DOWN) = IDrivable.endStatus.EXECUTION_END Then
                    systemSubState = 580
                End If
            Case 580 '檢查防呆感測器
                If OUT_ConveyerPosSen2.OffTimer.TimeElapsed.TotalMilliseconds > 100 Then
                    systemSubState = 590
                Else
                    Dim ap As New alarmContentSensor
                    With ap
                        .Sender = Me
                        .Inputs = OUT_ConveyerPosSen2.InputBit
                        .PossibleResponse = alarmContextBase.responseWays.RETRY
                        .Reason = alarmContentSensor.alarmReasonSensor.SHOULD_BE_OFF
                        .CallbackResponse(alarmContextBase.responseWays.RETRY) = Function() As Boolean
                                                                                     systemSubState = 580
                                                                                     Return True
                                                                                 End Function
                        CentralAlarmObject.raisingAlarm(ap)
                    End With
                End If
            Case 590 '使擋堆疊冶具氣缸上升
                If IN_Stopper4.drive(cylinderControl.cylinderCommandEnum.GO_OFF_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    loadFlags.writeFlag(flagsInLoaderUnloader.LoadButtonDisable_f, False)
                    loadFlags.writeFlag(flagsInLoaderUnloader.CasUnloadSpaceReady_f, False)
                    systemSubState = 0
                End If
                '-------------------------------------------------------
                '                      進堆疊冶具程序
                '-------------------------------------------------------
            Case 600 '使擋堆疊冶具氣缸下降
                If IN_Stopper3.drive(cylinderControl.cylinderCommandEnum.GO_OFF_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    systemSubState = 610
                End If
            Case 610 '輸送帶開始移動料匣
                If (IN_ConveyerMotor.drive(motorControl.motorCommandEnum.JOG, LoadConveyerUsedPositions.MOTOR_POSITION_1) =
                     IDrivable.endStatus.EXECUTION_END) Then
                    tmr.TimerGoal = New TimeSpan(0, 0, 3)
                    tmr.IsEnabled = True    'restart
                    systemSubState = 620
                End If
            Case 620
                SensorIndex = CheckStackStyleSenIndex.SEN_1
                systemSubState = 630
            Case 630 '判別感測器是否要檢查On或是Off
                If (IN_CasStyleCheckSen(SensorIndex).sw = IS_ON) Then
                    systemSubState = 640
                Else
                    systemSubState = 680
                End If
            Case 640 '檢查料匣形式防呆感測器
                If IN_CasStyleCheckSen(SensorIndex).status = IS_ON And IN_CasStyleCheckSen(SensorIndex).sensor.IsSensorCovered Then
                    systemSubState = 680
                ElseIf IN_CasStyleCheckSen(SensorIndex).status = IS_OFF And (Not IN_CasStyleCheckSen(SensorIndex).sensor.IsSensorCovered) Then
                    systemSubState = 680
                Else
                    If tmr.IsTimerTicked Then
                        systemSubState = 650
                    End If
                End If
            Case 650 '輸送帶馬達停止
                If IN_ConveyerMotor.drive(motorControl.motorCommandEnum.STOP_SLOW_DOWN) = IDrivable.endStatus.EXECUTION_END Then
                    systemSubState = 670
                End If
            Case 670 '產生錯誤
                Dim ap As New alarmContentSensor
                With ap
                    .Sender = Me
                    .Inputs = IN_CasStyleCheckSen(SensorIndex).sensor.InputBit
                    .PossibleResponse = alarmContextBase.responseWays.RETRY
                    If IN_CasStyleCheckSen(SensorIndex).status = IS_ON Then .Reason = alarmContentSensor.alarmReasonSensor.SHOULD_BE_ON
                    If IN_CasStyleCheckSen(SensorIndex).status = IS_OFF Then .Reason = alarmContentSensor.alarmReasonSensor.SHOULD_BE_OFF
                    .CallbackResponse(alarmContextBase.responseWays.RETRY) = Function() As Boolean
                                                                                 systemSubState = 610
                                                                                 Return True
                                                                             End Function
                    CentralAlarmObject.raisingAlarm(ap)
                End With
            Case 680 '檢查下一個感測器
                SensorIndex = SensorIndex + 1
                If SensorIndex > [Enum].GetValues(GetType(CheckStackStyleSenIndex)).Length - 1 Then
                    systemSubState = 690
                Else
                    systemSubState = 630
                End If
            Case 690 '輸送帶馬達停止
                If IN_ConveyerMotor.drive(motorControl.motorCommandEnum.STOP_SLOW_DOWN) = IDrivable.endStatus.EXECUTION_END Then
                    systemSubState = 700
                End If
            Case 700 '檢查防呆感測器
                If OUT_ConveyerPosSen1.OffTimer.TimeElapsed.TotalMilliseconds > 100 Then
                    systemSubState = 720
                Else '產生錯誤
                    Dim ap As New alarmContentSensor
                    With ap
                        .Sender = Me
                        .Inputs = OUT_ConveyerPosSen2.InputBit
                        .PossibleResponse = alarmContextBase.responseWays.RETRY
                        .Reason = alarmContentSensor.alarmReasonSensor.SHOULD_BE_OFF
                        .CallbackResponse(alarmContextBase.responseWays.RETRY) = Function() As Boolean
                                                                                     systemSubState = 700
                                                                                     Return True
                                                                                 End Function
                        CentralAlarmObject.raisingAlarm(ap)
                    End With
                End If
            Case 720 '使擋堆疊冶具氣缸上升
                If IN_Stopper3.drive(cylinderControl.cylinderCommandEnum.GO_ON_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    systemSubState = 730
                End If
            Case 730 '平台上升
                If UpDownCylinder.drive(cylinderControl.cylinderCommandEnum.GO_ON_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    systemSubState = 740
                End If
            Case 740 '設定堆疊冶具備便
                loadFlags.writeFlag(flagsInLoaderUnloader.LoadButtonDisable_f, False) '手動鈕致能
                loadFlags.writeFlag(flagsInLoaderUnloader.CasOn_UD_ConveyerReady_f, True)
                systemSubState = 0
        End Select

        Return 0
    End Function
    Sub New()
        '將自定義起始化函式加入 通用起始化引動清單
        Me.initialize = [Delegate].Combine(Me.initialize, New Func(Of Integer)(AddressOf initMappingAndSetup))
    End Sub

    Function initMappingAndSetup() As Integer
        relatedFlags.AddRange(loadFlags.FlagElementsArray)
        '本站主狀態函式設定
        systemMainStateFunctions(systemStatesEnum.IGNITE) = AddressOf stateIgnite       '鍊結主狀態函式
        systemMainStateFunctions(systemStatesEnum.EXECUTE) = AddressOf stateExecute     '鍊結主狀態函式
        systemMainState = systemStatesEnum.IGNITE   '設定初始主狀態
        Return 0
    End Function
End Class
