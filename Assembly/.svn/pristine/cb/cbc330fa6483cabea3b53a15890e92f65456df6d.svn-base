Imports Automation
Imports System.Reflection
Imports System.Xml.Serialization

Enum inspectionModuleTokens
    PVA
    SAW_MARK
End Enum

Public Class WaferData
    Inherits shiftDataPackBase
    Implements IWeightData
    Property WaferId As String = "default"
    Public Property WeightBeforeProcess As Single Implements IWeightData.WeightBeforeProcess
    <XmlIgnore()> Public Property WeightAfterProcess As Single Implements IWeightData.WeightAfterProcess
    Friend inspectionResults As Dictionary(Of inspectionModuleTokens, Integer) = New Dictionary(Of inspectionModuleTokens, Integer)
    Friend isTriggers As Dictionary(Of inspectionModuleTokens, Boolean) = New Dictionary(Of inspectionModuleTokens, Boolean)
    ReadOnly Property PVAResult As Integer
        Get
            Return inspectionResults(inspectionModuleTokens.PVA)
        End Get
    End Property

    ReadOnly Property SAWResult As Integer
        Get
            Return inspectionResults(inspectionModuleTokens.SAW_MARK)
        End Get
    End Property





    Sub New()
        'initialize inspection result
        inspectionResults.Add(inspectionModuleTokens.PVA, 0)
        inspectionResults.Add(inspectionModuleTokens.SAW_MARK, 0)

        isTriggers.Add(inspectionModuleTokens.PVA, False)
        isTriggers.Add(inspectionModuleTokens.SAW_MARK, False)
    End Sub
    Public Overrides Sub Assign(source As Object)
        MyBase.Assign(source)
        '-------------------------
        '   Assign Additional infos
        '-------------------------
        Dim pi As PropertyInfo() = Me.GetType.GetProperties()   'Hsien , 2015.05.19 , value assign function had verified
        For Each __pi As PropertyInfo In pi
            If __pi.GetIndexParameters.Count = 0 Then
                'only for non-indexing parameters
                Dim __value = __pi.GetValue(source, Nothing)
                If (__pi.CanWrite) Then
                    'prevent readonly property error , Hsien , 2015.06.09
                    __pi.SetValue(Me, __value, Nothing)
                End If
            End If

        Next


        inspectionResults = New Dictionary(Of inspectionModuleTokens, Integer)
        isTriggers = New Dictionary(Of inspectionModuleTokens, Boolean)

        'inspection results transmission
        With CType(source, WaferData)
            For index = 0 To [Enum].GetValues(GetType(inspectionModuleTokens)).Length - 1
                Dim __obj As [Enum] = [Enum].ToObject(GetType(inspectionModuleTokens), [Enum].GetValues(GetType(inspectionModuleTokens))(index))


                'error , reference replaced
                'inspectionResults(__obj) = .inspectionResults(__obj)
                'isTriggers(__obj) = .isTriggers(__obj)

                inspectionResults.Add(__obj, .inspectionResults(__obj))
                isTriggers.Add(__obj, .isTriggers(__obj))

            Next
        End With

    End Sub


    ''' <summary>
    ''' Used to trace wafer data
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Overrides Function ToString() As String
        Return String.Format("{0},{1}",
                             WaferId,
                             WeightBeforeProcess)
    End Function

End Class