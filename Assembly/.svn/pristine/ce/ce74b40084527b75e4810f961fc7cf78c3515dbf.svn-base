Imports Automation
Imports Automation.mainIOHardware
Imports Automation.Components.CommandStateMachine
Imports Automation.Components.Services

Imports System.Text

Public Class clsCassetteSystem
    Inherits systemControlPrototype
    Implements IFinishableStation
    Property IsStarted As Boolean
    Property LotID As String
    Property Slots As New List(Of Integer) '經由RFID取得要抽測哪幾片wafer
    Property CurrentSlot As Integer
    ''' <summary>
    ''' 當下抽出的極板資料
    ''' </summary>
    Property ShiftData As New shiftDataPackBase
    Public Event CassetteRemovedEvent As EventHandler
    Public Event CassetteRejectByUserEvent As EventHandler
    'Public Event CassetteArrivedEvent As EventHandler
    Property CassetteArrivedAction As Func(Of Boolean) = Function() (True)
    Property readCassetteID As Func(Of Boolean) = Function() (True)
    Property RFID As String

#Region "Data Declare"
#Region "Enums"
    Enum IgniteEnum
        _0
        _10
        _100
        _110

        _20

        _30

        _40

    End Enum
    Enum executeEnum
        _0

        _10

        _20

        _30

        _40_CHECK_SLOT_LIST

        _100

        _200

        _110

        _120

        _210

        _300

        _220

        _5

        _7

        _50

        _60

        _70

        _80

        _90

        _90_IGNORE

        _130

        _140

        _150

        _REJECT_0

        _REJECT_10

        _REJECT_20

        _45_CHECK_SLOT_LIST

    End Enum
    Enum EnumToungueMotorPoint
        BACK
        INSERT
    End Enum
    Enum EnumCassetteMotorPoint
        ''' <summary>
        ''' 供使用者取放卡匣的位置
        ''' </summary>
        IDLE
        INSERT
        DOWN_TOUCH
        PITCH
        GAP
    End Enum
    Enum EnumFlags
        CASSETTE_LUL
        IS_ACCEPTABLE
    End Enum
#End Region
    Public Property FinishableFlags As New flagController(Of IFinishableStation.controlFlags) Implements IFinishableStation.FinishableFlags 'used for ignite control
    Public Property UpstreamStations As List(Of IFinishableStation) Implements IFinishableStation.UpstreamStations
    ''' <summary>
    ''' 單一卡匣內可容納的wafer片數
    ''' </summary>
    Public Property NumOfSlots As Integer = 100
#End Region
#Region "control members"
    'Public PreparedCasstteId As String = ""
    Public motorCassette As New motorControl With {.IsEnabled = True}
    Public motorTounge As New motorControl With {.IsEnabled = True}
    ''' <summary>
    ''' 內部使用，由外部的motor point組合計算而成
    ''' </summary>
    Dim motorPointCassette As cMotorPoint
    Public CassetteSensorBit As ULong
    Public CassetteButtonBit As ULong
    Public lampCassette As New flipService
    Public flags As New flagController(Of EnumFlags)
    Public cyCassetteFix As New cylinderControl With {.IsEnabled = True}
    Public Property vacuumBit As ULong
    Public Property vacuumBreakBit As ULong
    Public Property vacuumSensorBit As ULong
    Dim tmr As New singleTimer
#End Region
    Function initMappingAndSetup() As Integer
        With relatedFlags
            .AddRange(FinishableFlags.FlagElementsArray)
        End With
        'configure relation between conveyorSystem and Cassette
        '============================================================
        '           Loader and Conveyer Flag Linkin
        '============================================================
        '下料卡匣可升降條件判別
        systemMainStateFunctions(systemStatesEnum.IGNITE) = Function() (Ignite(systemSubState))
        systemMainStateFunctions(systemStatesEnum.EXECUTE) = Function() (execute(systemSubState))
        systemMainState = systemStatesEnum.IGNITE
        'initEnableAllDrives() 'enable 此class裡所有的driveBase
        Return 0
    End Function
    Public Sub New()
        Me.initialize = [Delegate].Combine(Me.initialize, New Func(Of Integer)(AddressOf initMappingAndSetup))
    End Sub
    Protected Function execute(ByRef cStep As executeEnum) As Integer
        Static rand As New Random
        Select Case cStep
            Case executeEnum._0
                '偵測卡匣是否到位
                If UpstreamStations.Count > 0 AndAlso
                    UpstreamStations.TrueForAll(Function(obj As IFinishableStation) obj.FinishableFlags.viewFlag(IFinishableStation.controlFlags.STATION_FINISHED)) Then
                    '收料結束
                    FinishableFlags.setFlag(IFinishableStation.controlFlags.STATION_FINISHED)
                    systemMainState = systemStatesEnum.IGNITE '跳回ignite

                ElseIf readBit(CassetteSensorBit) = True Then
                    lampCassette.FlipGoal = New TimeSpan(TimeSpan.TicksPerSecond * 0.5) '若到位則閃爍卡匣鈕
                    lampCassette.IsEnabled = True
                    flags.resetFlag(EnumFlags.CASSETTE_LUL) 'reset flag
                    cStep = executeEnum._10
                ElseIf lampCassette.IsEnabled = True Then
                    lampCassette.IsEnabled = False
                    '提示使用者未偵測到卡匣
                End If
            Case executeEnum._10
                If UpstreamStations.Count > 0 AndAlso
                    UpstreamStations.TrueForAll(Function(obj As IFinishableStation) obj.FinishableFlags.viewFlag(IFinishableStation.controlFlags.STATION_FINISHED)) Then
                    '收料結束
                    FinishableFlags.setFlag(IFinishableStation.controlFlags.STATION_FINISHED)
                    systemMainState = systemStatesEnum.IGNITE '跳回ignite

                ElseIf readBit(CassetteSensorBit) = False Then
                    cStep = executeEnum._0
                ElseIf readBit(CassetteButtonBit) = True OrElse flags.readFlag(EnumFlags.CASSETTE_LUL) = True Then '待使用者按下卡匣鈕後，卡匣定位
                    lampCassette.IsEnabled = False
                    writeBit(lampCassette.OutputBit, True)
                    flags.resetFlag(EnumFlags.CASSETTE_LUL)
                    cStep = executeEnum._20
                End If
            Case executeEnum._20
                If cyCassetteFix.drive(cylinderControl.cylinderCommandEnum.GO_ON_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    cStep = executeEnum._30
                End If
            Case executeEnum._30   '讀取RFID
                If readCassetteID.Invoke = True Then
                    'RaiseEvent CassetteArrivedEvent(Me, Nothing)   'PreparedCasstteId
                    cStep = executeEnum._40_CHECK_SLOT_LIST
                End If
            Case executeEnum._40_CHECK_SLOT_LIST
                '等待Host是否要進卡匣
                '查看是否有下一片需要量測，若無，則移至取放卡匣位置
                If CassetteArrivedAction.Invoke = True Then
                    cStep = executeEnum._45_CHECK_SLOT_LIST
                End If
            Case executeEnum._45_CHECK_SLOT_LIST

                If flags.viewFlag(EnumFlags.IS_ACCEPTABLE) = False Then

                    Dim inputResult As String = InputBox("input the slot number(1~100)", "please insert the slot number", "50")
                    Dim slot As Integer
                    If IsNumeric(inputResult) = True Then slot = inputResult
                    If slot > 0 And slot <= 100 Then
                        CurrentSlot = slot - 1
                        cStep = executeEnum._50
                    Else
                        cStep = executeEnum._REJECT_0 '若沒有要量測的wafer，則離開 (如果被Host拒絕也是從此離開)
                    End If

                    'rejected by host
                ElseIf flags.readFlag(EnumFlags.CASSETTE_LUL) = True Then
                    'rejected by user
                    RaiseEvent CassetteRejectByUserEvent(Me, Nothing)
                ElseIf Slots.Count > 0 Then
                    'normal 
                    CurrentSlot = Slots(0) - 1
                    If CurrentSlot < 1 OrElse CurrentSlot > 100 Then
                        sendMessage(statusEnum.GENERIC_MESSAGE, String.Format("the slot number({0}) is not correct", CurrentSlot))
                        cStep = executeEnum._REJECT_0 '若沒有要量測的wafer，則離開 (如果被Host拒絕也是從此離開)
                    Else
                        Slots.RemoveAt(0)
                        cStep = executeEnum._50
                    End If
                Else 'slot count = 0
                    'this cassette is done
                    cStep = executeEnum._REJECT_0 '若沒有要量測的wafer，則離開 (如果被Host拒絕也是從此離開)
                End If

                'If MsgBox("there is no slot infomation in Slots, just random pull one wafer", MsgBoxStyle.YesNo) = MsgBoxResult.Yes Then
                '    CurrentSlot = rand.Next(0, 99)
                '    MsgBox("Current Slot=" & CurrentSlot)
                '    cStep = executeEnum._50
                'Else
                '    cStep = executeEnum._REJECT_0 '若沒有要量測的wafer，則離開 (如果被Host拒絕也是從此離開)
                'End If

            Case executeEnum._50 '移至卡匣取片的位置(依Host回傳的位置計算)
                motorPointCassette = motorCassette.enum2cPoint(EnumCassetteMotorPoint.INSERT).Clone
                motorPointCassette.Distance = motorCassette.enum2cPoint(EnumCassetteMotorPoint.INSERT).Distance +
                    CurrentSlot * motorCassette.enum2cPoint(EnumCassetteMotorPoint.PITCH).Distance
                If CurrentSlot >= NumOfSlots / 2 Then '若有超過50片，則再加上Gap，並刪除1個pitch
                    motorPointCassette.Distance += motorCassette.enum2cPoint(EnumCassetteMotorPoint.GAP).Distance -
                        motorCassette.enum2cPoint(EnumCassetteMotorPoint.PITCH).Distance
                End If
                cStep = executeEnum._60
            Case executeEnum._60
                If motorCassette.drive(motorControl.motorCommandEnum.GO_POSITION, motorPointCassette) = motorControl.statusEnum.EXECUTION_END Then
                    cStep = executeEnum._70
                End If
            Case executeEnum._70  '舌頭插入
                If motorTounge.drive(motorControl.motorCommandEnum.GO_POSITION, EnumToungueMotorPoint.INSERT) = motorControl.statusEnum.EXECUTION_END Then
                    cStep = executeEnum._80
                End If
            Case executeEnum._80 '卡匣下降一個touch pitch
                If motorCassette.drive(motorControl.motorCommandEnum.GO_POSITION, EnumCassetteMotorPoint.DOWN_TOUCH) = motorControl.statusEnum.EXECUTION_END Then
                    writeBit(vacuumBit, True)
                    tmr.TimerGoal = New TimeSpan(TimeSpan.TicksPerSecond * 1) : tmr.IsEnabled = True
                    cStep = executeEnum._90
                End If
            Case executeEnum._90
                If readBit(vacuumSensorBit) = True Then '舌頭吸真空
                    cStep = executeEnum._100
                ElseIf tmr.IsTimerTicked = True Then
                    '逾時，報警
                    Dim ap As New alarmContentSensor
                    With ap
                        .Sender = Me
                        .Inputs = vacuumSensorBit
                        .PossibleResponse = alarmContextBase.responseWays.RETRY Or alarmContextBase.responseWays.IGNORE
                        .Reason = alarmContentSensor.alarmReasonSensor.SHOULD_BE_ON
                        .CallbackResponse(alarmContextBase.responseWays.RETRY) = Function() (True)
                        .CallbackResponse(alarmContextBase.responseWays.IGNORE) = Function() As Boolean
                                                                                      systemSubState = executeEnum._90_IGNORE
                                                                                      Return True
                                                                                  End Function
                        CentralAlarmObject.raisingAlarm(ap)
                    End With
                End If
            Case executeEnum._90_IGNORE
                'todo 進入舌頭退出程序->卡匣退出程序
                cStep = executeEnum._REJECT_0
            Case executeEnum._100 '抽出 與 通知手臂取片->量測->放片
                If motorTounge.drive(motorControl.motorCommandEnum.GO_POSITION, EnumToungueMotorPoint.BACK) = motorControl.statusEnum.EXECUTION_END Then
                    ShiftData.IsPositionOccupied = True
                    ShiftData.ModuleAction.writeFlag(interlockedFlag.POSITION_OCCUPIED, True)
                    cStep = executeEnum._110
                End If
            Case executeEnum._110 '等待手臂放回
                If ShiftData.ModuleAction.viewFlag(interlockedFlag.POSITION_OCCUPIED) = False Then
                    If ShiftData.IsPositionOccupied = True Then
                        cStep = executeEnum._120
                    Else
                        cStep = executeEnum._40_CHECK_SLOT_LIST '若手臂放回，但無wafer，則直接跳至看是否有下一片
                    End If
                End If
            Case executeEnum._120 '插入原本的卡匣位置
                If motorTounge.drive(motorControl.motorCommandEnum.GO_POSITION, EnumToungueMotorPoint.INSERT) = motorControl.statusEnum.EXECUTION_END Then
                    writeBit(vacuumBit, False)
                    writeBit(vacuumBreakBit, True)
                    tmr.TimerGoal = New TimeSpan(TimeSpan.TicksPerSecond * 0.2) : tmr.IsEnabled = True
                    cStep = executeEnum._130
                End If
            Case executeEnum._130 '舌頭關真空->破真空->關破真空
                If tmr.IsTimerTicked = True Then
                    writeBit(vacuumBreakBit, False)
                    motorPointCassette = motorCassette.enum2cPoint(EnumCassetteMotorPoint.DOWN_TOUCH).Clone
                    motorPointCassette.Distance = -motorPointCassette.Distance '方向相反，向上移動一個pitch
                    cStep = executeEnum._140
                End If
            Case executeEnum._140 '卡匣向上一個pitch
                If motorCassette.drive(motorControl.motorCommandEnum.GO_POSITION, motorPointCassette) = motorControl.statusEnum.EXECUTION_END Then
                    cStep = executeEnum._150
                End If
            Case executeEnum._150 '舌頭縮回
                If motorTounge.drive(motorControl.motorCommandEnum.GO_POSITION, EnumToungueMotorPoint.BACK) = motorControl.statusEnum.EXECUTION_END Then
                    cStep = executeEnum._45_CHECK_SLOT_LIST
                End If

            Case executeEnum._REJECT_0
                '多寫一次，防止沒有退出
                If motorTounge.drive(motorControl.motorCommandEnum.GO_POSITION, EnumToungueMotorPoint.BACK) = motorControl.statusEnum.EXECUTION_END Then
                    cStep = executeEnum._REJECT_10
                End If
            Case executeEnum._REJECT_10
                If motorCassette.drive(motorControl.motorCommandEnum.GO_POSITION, EnumCassetteMotorPoint.IDLE) = motorControl.statusEnum.EXECUTION_END Then
                    cStep = executeEnum._REJECT_20
                End If
            Case executeEnum._REJECT_20
                '放開卡匣定位氣缸
                If cyCassetteFix.drive(cylinderControl.cylinderCommandEnum.GO_OFF_END) = cylinderControl.statusEnum.EXECUTION_END Then
                    RaiseEvent CassetteRemovedEvent(Me, Nothing)
                    cStep = executeEnum._0 '等待使用者再次按下卡匣鈕
                End If
        End Select
        Return 0
    End Function
    Private Function Ignite(ByRef cStep As IgniteEnum) As Integer
        'Static StationCollection As List(Of IFinishableStation) = New List(Of IFinishableStation) From {Lane1, Lane2, NgPicker}
        Static StationCollection As List(Of IFinishableStation) = New List(Of IFinishableStation) From {} ', stackSubSystem}   'Hsien , 2015.04.23

        Select Case cStep
            Case IgniteEnum._0
                '-----------------------------
                '   Let all ignite
                '-----------------------------
                If (FinishableFlags.viewFlag(IFinishableStation.controlFlags.COMMAND_IGNITE)) Then '等待啟動flag
                    cStep = IgniteEnum._10
                End If
            Case IgniteEnum._10
                If motorTounge.drive(motorControl.motorCommandEnum.GO_HOME) = motorControl.statusEnum.EXECUTION_END Then
                    cStep = IgniteEnum._20
                End If
            Case IgniteEnum._20
                If motorTounge.drive(motorControl.motorCommandEnum.GO_POSITION, EnumToungueMotorPoint.BACK) = motorControl.statusEnum.EXECUTION_END Then
                    cStep = IgniteEnum._30
                End If
            Case IgniteEnum._30
                If motorCassette.drive(motorControl.motorCommandEnum.GO_HOME) = motorControl.statusEnum.EXECUTION_END Then
                    cStep = IgniteEnum._40
                End If
            Case IgniteEnum._40
                If motorCassette.drive(motorControl.motorCommandEnum.GO_POSITION, EnumCassetteMotorPoint.IDLE) = motorControl.statusEnum.EXECUTION_END Then
                    cStep = IgniteEnum._100
                End If
            Case IgniteEnum._100 '等待所有復歸完成
                FinishableFlags.writeFlag(IFinishableStation.controlFlags.COMMAND_IGNITE, False)
                cStep = IgniteEnum._110
            Case IgniteEnum._110
                If IsStarted = True Then
                    flags.writeFlag(EnumFlags.CASSETTE_LUL, False)
                    systemMainState = systemStatesEnum.EXECUTE  'hsien , come to execute
                End If
        End Select
        Return 0
    End Function




End Class

