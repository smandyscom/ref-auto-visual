Imports RCAPINet
Imports System.Text.RegularExpressions
Imports System.IO

Public Class compEpsonScara
    Inherits compScaraBase



    Dim m_spel As New Spel
    Dim mPoint As SpelPoint
    Dim taskMotion As Task(Of scaraExceptionPack)
    Property frmMain As Windows.Forms.Form
    Property ProjectFileRelativePath As String 'relative path in Data\SCARA_prj\*.sprj

    Public Function Initialize() As Integer
        m_spel.Initialize()
        Try
            m_spel.Reset()
        Catch ex As Exception
            MsgBox(ex.Message & vbNewLine & ex.StackTrace.ToString)
        End Try

        Dim path = System.IO.Path.Combine(My.Application.Info.DirectoryPath, "Data", "SCARA_prj", "PickAndPlace.sprj")
        'Dim path = "C:\EpsonRC70\projects\Samples\PickAndPlace\PickAndPlace.sprj"
        m_spel.Project = path
        'm_spel.Project = "C:\EpsonRC70\projects\Samples\PickAndPlace\PickAndPlace.sprj"
        m_spel.AsyncMode = False 'AsyncMode 可讓您在執行其他方法期間同時執行 Spel 方法。只有下列的 Spel 類別方法可以非同步執行：  
        'Arc, Arc3, Curve, CVMove, ExecuteCommand, Go, Home, JTran, Jump, Jump3, Jump3CP, Mcal, Move, PTran, Pulse, TGo, TMove
        '設為false，因為true時，pause後continue會有問題，無法繼續之前的動作。
        Try
            m_spel.MotorsOn = True '設置並傳回目前機器人電機開啟或關閉的狀態。
        Catch ex As Exception
            MsgBox(ex.Message & vbNewLine & ex.StackTrace.ToString)
        End Try



        '從檔案中取得所有點位
        GetPoints(path)

        Return 0
    End Function
    Function GetPoints(sprjPath As String) As List(Of String)
        Dim _matchPointFileCollection As MatchCollection
        Dim points As New List(Of String)
        Using sr As New StreamReader(sprjPath)
            Dim rawData As String = sr.ReadToEnd()
            'Dim keyWord As String = "PointFile1[\s]*\{[\s]*(?i)(sname=\"")(.+\.pts)\""" '"PointFile1.*\{\n*.*sName=\""(.+)\"""
            Dim keyWord As String = "(?i)(sname=\"")(.+\.pts)\""" '"PointFile1.*\{\n*.*sName=\""(.+)\"""
            _matchPointFileCollection = Regex.Matches(rawData, keyWord) '尋找開頭為{，結尾為;}的字串，並把它定義為group 1，已去除開頭與結尾字串
        End Using
        For i As Integer = 0 To _matchPointFileCollection.Count - 1
            Dim pointFileName As String = _matchPointFileCollection(i).Groups(2).Value
            Using sr As New StreamReader(System.IO.Path.Combine(System.IO.Path.GetDirectoryName(sprjPath), pointFileName))
                Dim rawData As String = sr.ReadToEnd()
                Dim keyWord As String = "(?i)(sLabel=\"")(.+)\""" '"PointFile1.*\{\n*.*sName=\""(.+)\"""
                Dim _matchPointCollection As MatchCollection
                _matchPointCollection = Regex.Matches(rawData, keyWord) '尋找開頭為{，結尾為;}的字串，並把它定義為group 1，已去除開頭與結尾字串
                For Each _match As Match In _matchPointCollection
                    points.Add(_match.Groups(2).Value)
                Next
            End Using
        Next
        Return points
    End Function

    Protected Overrides Function Soft_Emg_Stop() As Integer
        m_spel.Stop()
        Return 0
    End Function
    Protected Overrides Function CommandInCycle() As Boolean
        If taskMotion IsNot Nothing AndAlso taskMotion.IsCompleted = False Then Return True
        Return m_spel.CommandInCycle
    End Function
    Protected Overrides Function pauseCommand() As Integer
        m_spel.Pause()
        Return 0
    End Function

    Protected Overrides Function resumeCommand() As Integer
        m_spel.Continue()
        Return 0
    End Function
    Protected Overrides Function go() As scaraExceptionPack

        If CommandInCycle() = True Then
            Return New scaraExceptionPack With {.ErrorNumber = returnErrorCodes.ERR_TaskIsNotCompleted, .StackTrace = "", .Message = [Enum].GetName(GetType(returnErrorCodes), returnErrorCodes.ERR_TaskIsNotCompleted)}
        End If
        If PositionPoint Is Nothing Then
            Return New scaraExceptionPack With {.ErrorNumber = returnErrorCodes.ERR_No_Assigning_Point, .StackTrace = "", .Message = [Enum].GetName(GetType(returnErrorCodes), returnErrorCodes.ERR_No_Assigning_Point)}
        End If
        taskMotion = Task.Factory.StartNew(Function()
                                               Try
                                                   m_spel.Go(New SpelPoint With {
                                                    .X = PositionPoint.X, .Y = PositionPoint.Y,
                                                    .Z = PositionPoint.Z, .U = PositionPoint.U,
                                                    .Local = PositionPoint.Local,
                                                    .Hand = PositionPoint.Hand})
                                               Catch ex As SpelException
                                                   Return New scaraExceptionPack With {.ErrorNumber = ex.ErrorNumber,
                                                                                       .StackTrace = .StackTrace,
                                                                                       .Message = .Message}
                                               End Try
                                               Return Nothing
                                           End Function)
        Return Nothing
    End Function
    Protected Overrides Function gorel() As scaraExceptionPack

        If CommandInCycle() = True Then
            Return New scaraExceptionPack With {.ErrorNumber = returnErrorCodes.ERR_TaskIsNotCompleted, .StackTrace = "", .Message = [Enum].GetName(GetType(returnErrorCodes), returnErrorCodes.ERR_TaskIsNotCompleted)}
        End If
        If PositionPoint Is Nothing Then
            Return New scaraExceptionPack With {.ErrorNumber = returnErrorCodes.ERR_No_Assigning_Point, .StackTrace = "", .Message = [Enum].GetName(GetType(returnErrorCodes), returnErrorCodes.ERR_No_Assigning_Point)}
        End If
        'm_spel.Go("Here +X(10)+Y(10)+Z(-10)+U(10)")
        taskMotion = Task.Factory.StartNew(Function()
                                               Try

                                                   m_spel.Go(String.Format("Here +X({0})+Y({1})+Z({2})+U({3})",
                                                                           PositionPoint.X, PositionPoint.Y,
                                                                           PositionPoint.Z, PositionPoint.U))
                                               Catch ex As SpelException
                                                   Return New scaraExceptionPack With {.ErrorNumber = ex.ErrorNumber,
                                                        .StackTrace = .StackTrace,
                                                        .Message = .Message}
                                               End Try
                                               Return Nothing
                                           End Function)
        Return Nothing
    End Function
    Protected Overrides Function home() As scaraExceptionPack
        If CommandInCycle() = True Then
            Return New scaraExceptionPack With {.ErrorNumber = returnErrorCodes.ERR_TaskIsNotCompleted, .StackTrace = "", .Message = [Enum].GetName(GetType(returnErrorCodes), returnErrorCodes.ERR_TaskIsNotCompleted)}
        End If
        taskMotion = Task.Factory.StartNew(Function()
                                               Try
                                                   m_spel.Home()
                                               Catch ex As SpelException
                                                   Return New scaraExceptionPack With {.ErrorNumber = ex.ErrorNumber,
                                                                                       .StackTrace = .StackTrace,
                                                                                       .Message = .Message}
                                               End Try
                                               Return Nothing
                                           End Function)
        Return Nothing
    End Function
    Protected Overrides Function jump() As scaraExceptionPack

        If CommandInCycle() = True Then
            Return New scaraExceptionPack With {.ErrorNumber = returnErrorCodes.ERR_TaskIsNotCompleted, .StackTrace = "", .Message = [Enum].GetName(GetType(returnErrorCodes), returnErrorCodes.ERR_TaskIsNotCompleted)}
        End If
        If PointTable.Count = 0 Then
            Return New scaraExceptionPack With {.ErrorNumber = returnErrorCodes.ERR_No_Assigning_Point, .StackTrace = "", .Message = [Enum].GetName(GetType(returnErrorCodes), returnErrorCodes.ERR_No_Assigning_Point)}
        End If
        Dim destinationPoint As New SpelPoint With {
                                                        .X = PositionPoint.X, .Y = PositionPoint.Y,
                                                        .Z = PositionPoint.Z, .U = PositionPoint.U,
                                                        .Local = PositionPoint.Local,
                                                        .Hand = PositionPoint.Hand}
        taskMotion = Task.Factory.StartNew(Function()
                                               Try
                                                   If PointTable.Count = 1 Then '只有一個位置
                                                       m_spel.Jump(destinationPoint)
                                                   ElseIf PointTable.Count = 2 Then
                                                       Dim LimZ As String = "LimZ " & PointTable(1).Z.ToString
                                                       m_spel.Jump(destinationPoint, LimZ)
                                                   End If
                                               Catch ex As SpelException
                                                   Return New scaraExceptionPack With {.ErrorNumber = ex.ErrorNumber,
                                                                                       .StackTrace = .StackTrace,
                                                                                       .Message = .Message}
                                               End Try
                                               Return Nothing
                                           End Function)
        Return Nothing
    End Function
    Public Overrides Function GetPoint(pointIndex As Integer) As scaraPoint
        Dim p As New scaraPoint
        With m_spel.GetPoint(pointIndex)
            p.X = .X
            p.Y = .Y
            p.Z = .Z
            p.U = .U
            p.Hand = .Hand
            p.Local = .Local
        End With
        Return p

    End Function

    Protected Overrides Function checkMotionDone() As scaraExceptionPack
        Return taskMotion.Result
    End Function
    Public Overrides Sub showWindow(windows As windowsEnum, sender As Windows.Forms.Form)
        Try
            m_spel.ShowWindow(windows, sender)
        Catch ex As Exception
            MsgBox(ex.Message & vbNewLine & ex.StackTrace)
        End Try

    End Sub
    Public Overrides Sub runDialog(dialog As dialogEnum, sender As Windows.Forms.Form)
        Try
            m_spel.RunDialog(dialog, sender)
        Catch ex As Exception
            MsgBox(ex.Message & vbNewLine & ex.StackTrace)
        End Try
    End Sub

    Public Overrides Function Disconnect() As Integer
        Try
            m_spel.Disconnect()
            m_spel.Dispose()
        Catch ex As Exception
            MsgBox(ex.Message & vbNewLine & ex.StackTrace)
        End Try
        Return 0
    End Function
    Public Overrides Sub programMode()
        Try
            m_spel.OperationMode = SpelOperationMode.Program
        Catch ex As Exception
            MsgBox(ex.Message & vbNewLine & ex.StackTrace)
        End Try

    End Sub
    Public Overrides Sub reset()
        Try
            m_spel.Reset()
        Catch ex As Exception
            MsgBox(ex.Message & vbNewLine & ex.StackTrace)
        End Try

    End Sub
    Public Overrides Sub teachPoint()
        Try
            m_spel.TeachPoint("robot1.pts", 1, "Teach Pick Position")
        Catch ex As Exception
            MsgBox(ex.Message & vbNewLine & ex.StackTrace)
        End Try

    End Sub
    Public Overrides Function free() As scaraExceptionPack
        m_spel.SFree()
        Return Nothing
    End Function
    Public Overrides Function lock() As scaraExceptionPack
        m_spel.SLock()
        Return Nothing
    End Function


    Public Sub New()
        MyBase.New()
        Initialize()
    End Sub
    Protected Overrides Function GetPosition() As Single()
        Return m_spel.GetRobotPos(SpelRobotPosType.World, 0, 0, 0)
    End Function
End Class
