Imports Automation.Components.CommandStateMachine
Imports System.ComponentModel
Imports Automation
Imports SCARA

Public Class userControlScara
    Property scara As SCARA.compHexaPodBase
    Property PropertyView As userControlPropertyView
    Dim frm As System.Windows.Forms.Form
    'Dim simultanousCommands As List(Of cMotorPoint) = New List(Of cMotorPoint)  'Hsien , 2015.01.25 , support simulatanous command

    Private Sub loadUserControlMotor(ByVal sender As Object, ByVal e As EventArgs) Handles MyBase.Load

        For Each pair As KeyValuePair(Of [Enum], compHexaPodBase.commandFunctionPrototype) In scara.CommandFunctionDictionary
            ComboBoxCommand.Items.Add(pair.Key)

        Next

        For Each pair As KeyValuePair(Of [Enum], Short) In scara.PositionDictionary
            ComboBox1stPositions.Items.Add(pair.Key)
            ComboBox2ndPositions.Items.Add(pair.Key)
        Next

        'UserControlPropertyViewMotor.Drive = Motor
        Me.SplitContainer1.Panel2.Controls.Add(PropertyView)
        PropertyView.Dock = Windows.Forms.DockStyle.Fill
    End Sub

    Private Sub driveMotor(ByVal sender As Object, ByVal e As EventArgs) Handles ButtonDrive.Click
        Dim endStatus = scara.CommandEndStatus 'reset it
        If ComboBox1stPositions.SelectedItem IsNot Nothing AndAlso ComboBox2ndPositions.SelectedItem IsNot Nothing Then
            scara.drive(ComboBoxCommand.SelectedItem, ComboBox1stPositions.SelectedItem, ComboBox2ndPositions.SelectedItem)
        ElseIf (ComboBox1stPositions.SelectedItem IsNot Nothing) Then
            scara.drive(ComboBoxCommand.SelectedItem, ComboBox1stPositions.SelectedItem)
        Else
            scara.drive(ComboBoxCommand.SelectedItem)
        End If
    End Sub

    'Private Sub simultanousSetup(ByVal sender As Object, ByVal e As EventArgs) Handles ButtonSimultanousSetup.Click
    '    Dim __form As Form = New Form()
    '    __form.Controls.Add(New DataGridView With {.DataSource = simultanousCommands,
    '                                              .Dock = DockStyle.Fill})
    '    If (__form.ShowDialog()) Then
    '        Motor.PointTable = simultanousCommands
    '    End If

    'End Sub


    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles btnSimulator.Click,
        btnIOMonitor.Click,
        btnTaskManager.Click,
        btnControllerTools.Click,
        btnRobotManager.Click

        If frm Is Nothing Then
            Dim tempOjbect As Object = sender
            Do
                If tempOjbect.GetType Is GetType(System.Windows.Forms.Form) Then frm = tempOjbect : Exit Do
                tempOjbect = tempOjbect.parent
                If tempOjbect Is Nothing Then MsgBox("sener is not a form!") : Exit Sub
            Loop
        End If


        Select Case sender.name
            Case btnSimulator.Name : scara.showWindow(compHexaPodBase.windowsEnum.Simulator, frm)
            Case btnIOMonitor.Name : scara.showWindow(compHexaPodBase.windowsEnum.IOMonitor, frm)
            Case btnTaskManager.Name : scara.showWindow(compHexaPodBase.windowsEnum.TaskManager, frm)
            Case btnControllerTools.Name : scara.runDialog(compHexaPodBase.dialogEnum.ControllerTools, frm)
            Case btnRobotManager.Name : scara.runDialog(compHexaPodBase.dialogEnum.RobotManager, frm)
        End Select



    End Sub

    Private Sub btnProgramMode_Click(sender As Object, e As EventArgs) Handles btnProgramMode.Click
        scara.programMode()
    End Sub

    Private Sub btnReset_Click(sender As Object, e As EventArgs) Handles btnReset.Click
        scara.reset()
    End Sub

    Private Sub btnTeachPoint_Click(sender As Object, e As EventArgs) Handles btnTeachPoint.Click
        scara.teachPoint()
    End Sub

    Private Sub ComboBoxCommand_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ComboBoxCommand.SelectedIndexChanged

        Select Case ComboBoxCommand.Text
            Case [Enum].GetName(GetType(compHexaPodBase.motorCommandEnum), compHexaPodBase.motorCommandEnum.GO)
                ComboBox1stPositions.Enabled = True
                ComboBox2ndPositions.Enabled = False
                ButtonDrive.Enabled = True
            Case [Enum].GetName(GetType(compHexaPodBase.motorCommandEnum), compHexaPodBase.motorCommandEnum.JUMP)
                ComboBox1stPositions.Enabled = True
                ComboBox2ndPositions.Enabled = True
                ButtonDrive.Enabled = True
            Case [Enum].GetName(GetType(compHexaPodBase.motorCommandEnum), compHexaPodBase.motorCommandEnum.HOME)
                ComboBox1stPositions.Enabled = False
                ComboBox2ndPositions.Enabled = False
                ButtonDrive.Enabled = True
            Case [Enum].GetName(GetType(compHexaPodBase.motorCommandEnum), compHexaPodBase.motorCommandEnum.GO_REL)
                ButtonDrive.Enabled = False 'do not use this function!
        End Select
    End Sub

    Private Sub ButtonRelMove_Click(sender As Object, e As EventArgs) Handles ButtonNegX.Click, ButtonPosX.Click,
        ButtonNegY.Click, ButtonPosY.Click, ButtonNegZ.Click, ButtonPosZ.Click, ButtonNegU.Click, ButtonPosU.Click
        Dim endStatus = scara.CommandEndStatus 'reset it
        Select Case sender.name
            Case ButtonNegX.Name
                scara.drive(compHexaPodBase.motorCommandEnum.GO_REL, New compHexaPodBase.hexaPoint With {.PosX = -Val(ComboBoxRelDistance.Text)})
            Case ButtonPosX.Name
                scara.drive(compHexaPodBase.motorCommandEnum.GO_REL, New compHexaPodBase.hexaPoint With {.PosX = Val(ComboBoxRelDistance.Text)})
            Case ButtonNegY.Name
                scara.drive(compHexaPodBase.motorCommandEnum.GO_REL, New compHexaPodBase.hexaPoint With {.Y = -Val(ComboBoxRelDistance.Text)})
            Case ButtonPosY.Name
                scara.drive(compHexaPodBase.motorCommandEnum.GO_REL, New compHexaPodBase.hexaPoint With {.Y = Val(ComboBoxRelDistance.Text)})
            Case ButtonNegZ.Name
                scara.drive(compHexaPodBase.motorCommandEnum.GO_REL, New compHexaPodBase.hexaPoint With {.Z = -Val(ComboBoxRelDistance.Text)})
            Case ButtonPosZ.Name
                scara.drive(compHexaPodBase.motorCommandEnum.GO_REL, New compHexaPodBase.hexaPoint With {.Z = Val(ComboBoxRelDistance.Text)})
            Case ButtonNegU.Name
                scara.drive(compHexaPodBase.motorCommandEnum.GO_REL, New compHexaPodBase.hexaPoint With {.U = -Val(ComboBoxRelDistance.Text)})
            Case ButtonPosU.Name
                scara.drive(compHexaPodBase.motorCommandEnum.GO_REL, New compHexaPodBase.hexaPoint With {.U = Val(ComboBoxRelDistance.Text)})


        End Select


    End Sub
End Class
